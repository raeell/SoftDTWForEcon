[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Prédiction Taxi ou Météo?",
    "section": "",
    "text": "viewof modele = Inputs.radio(\n  new Map([\n    [\"Taxi\", \"taxi\"],\n    [\"Météo\", \"weather\"]\n  ]),\n  {\n    value: \"taxi\",\n    label: html`&lt;b&gt;Modèle de prédiction&lt;/b&gt;`,\n    format: ([name, value]) =&gt; {\n      const imageUrl =\n        value === \"taxi\"\n          ?\"https://img.icons8.com/color/512/taxi.png\"\n          : \"https://img.icons8.com/color/512/partly-cloudy-day--v1.png\";\n      return html`&lt;div style=\"text-align: center;\"&gt;\n        &lt;span style=\"display: block; font-weight: bold;\"&gt;${name}&lt;/span&gt;\n        &lt;img src=\"${imageUrl}\" style=\"width: 100px; height: auto; margin-top: 8px;\" /&gt;\n      &lt;/div&gt;`;\n    }\n  }\n)\n\n\n\n\n\n\n\ndefaultDate = modele === \"weather\"\n  ? new Date(\"2016-01-01T15:00:00\")\n  : new Date(\"2023-03-12T15:00:00\")\n\nviewof date = Inputs.datetime({\n  value: defaultDate,\n  label: \"Date et heure\"\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrédiction de notre modèle:\n\npredictionUrl = {\n  if (modele === \"taxi\") {\n    let formatted = date.toISOString().slice(0, 19).replace(\"T\", \" \");\n    let encoded = encodeURIComponent(formatted);\n    return `https://softdtwforecon.lab.sspcloud.fr/predict_taxi?date=${encoded}`;\n  } else {\n    let d = date;\n    let formatted = `${String(d.getDate()).padStart(2, \"0\")}.${String(d.getMonth() + 1).padStart(2, \"0\")}.${d.getFullYear()} ${String(d.getHours()).padStart(2, \"0\")}:${String(d.getMinutes()).padStart(2, \"0\")}:00`;\n    let encoded = encodeURIComponent(formatted);\n    return `https://softdtwforecon.lab.sspcloud.fr/predict_weather?date=${encoded}`;\n  }\n}\n\n\n\n\n\n\n\nprediction = d3.json(predictionUrl)\n\n\n\n\n\n\n\ndataPlot = (\n  modele === \"taxi\"\n    ? (prediction?.[\"Prédiction taxi\"]?.[0] ?? [])\n        .map((arr, i) =&gt; ({ x: i + 1, y: arr[0] })) \n    : (prediction?.[\"prediction\"] ?? [])\n        .map((arr, i) =&gt; ({ x: i + 1, y: arr[0] })) \n)\n\n\ndataPlot.length &gt; 0 ? Plot.plot({\n  y: { label: modele === \"taxi\" ? \"Courses de taxi\" : \"Température (°C)\" },\n  x: { label: \"Heures futures\" },\n  marks: [\n    Plot.line(dataPlot, { x: \"x\", y: \"y\", stroke: \"blue\" }),\n    Plot.dot(dataPlot, { x: \"x\", y: \"y\", fill: \"orange\" })\n  ]\n}) : html`&lt;p&gt;Chargement en cours...&lt;/p&gt;`"
  },
  {
    "objectID": "index.html#prédisez-le-futur",
    "href": "index.html#prédisez-le-futur",
    "title": "Prédiction Taxi ou Météo?",
    "section": "",
    "text": "viewof modele = Inputs.radio(\n  new Map([\n    [\"Taxi\", \"taxi\"],\n    [\"Météo\", \"weather\"]\n  ]),\n  {\n    value: \"taxi\",\n    label: html`&lt;b&gt;Modèle de prédiction&lt;/b&gt;`,\n    format: ([name, value]) =&gt; {\n      const imageUrl =\n        value === \"taxi\"\n          ?\"https://img.icons8.com/color/512/taxi.png\"\n          : \"https://img.icons8.com/color/512/partly-cloudy-day--v1.png\";\n      return html`&lt;div style=\"text-align: center;\"&gt;\n        &lt;span style=\"display: block; font-weight: bold;\"&gt;${name}&lt;/span&gt;\n        &lt;img src=\"${imageUrl}\" style=\"width: 100px; height: auto; margin-top: 8px;\" /&gt;\n      &lt;/div&gt;`;\n    }\n  }\n)\n\n\n\n\n\n\n\ndefaultDate = modele === \"weather\"\n  ? new Date(\"2016-01-01T15:00:00\")\n  : new Date(\"2023-03-12T15:00:00\")\n\nviewof date = Inputs.datetime({\n  value: defaultDate,\n  label: \"Date et heure\"\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrédiction de notre modèle:\n\npredictionUrl = {\n  if (modele === \"taxi\") {\n    let formatted = date.toISOString().slice(0, 19).replace(\"T\", \" \");\n    let encoded = encodeURIComponent(formatted);\n    return `https://softdtwforecon.lab.sspcloud.fr/predict_taxi?date=${encoded}`;\n  } else {\n    let d = date;\n    let formatted = `${String(d.getDate()).padStart(2, \"0\")}.${String(d.getMonth() + 1).padStart(2, \"0\")}.${d.getFullYear()} ${String(d.getHours()).padStart(2, \"0\")}:${String(d.getMinutes()).padStart(2, \"0\")}:00`;\n    let encoded = encodeURIComponent(formatted);\n    return `https://softdtwforecon.lab.sspcloud.fr/predict_weather?date=${encoded}`;\n  }\n}\n\n\n\n\n\n\n\nprediction = d3.json(predictionUrl)\n\n\n\n\n\n\n\ndataPlot = (\n  modele === \"taxi\"\n    ? (prediction?.[\"Prédiction taxi\"]?.[0] ?? [])\n        .map((arr, i) =&gt; ({ x: i + 1, y: arr[0] })) \n    : (prediction?.[\"prediction\"] ?? [])\n        .map((arr, i) =&gt; ({ x: i + 1, y: arr[0] })) \n)\n\n\ndataPlot.length &gt; 0 ? Plot.plot({\n  y: { label: modele === \"taxi\" ? \"Courses de taxi\" : \"Température (°C)\" },\n  x: { label: \"Heures futures\" },\n  marks: [\n    Plot.line(dataPlot, { x: \"x\", y: \"y\", stroke: \"blue\" }),\n    Plot.dot(dataPlot, { x: \"x\", y: \"y\", fill: \"orange\" })\n  ]\n}) : html`&lt;p&gt;Chargement en cours...&lt;/p&gt;`"
  }
]